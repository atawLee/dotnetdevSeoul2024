// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleWMS.Database.Context;

#nullable disable

namespace SimpleWMS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240220155412_locationColumn")]
    partial class locationColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.16");

            modelBuilder.Entity("SimpleWMS.Database.Entities.InventoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("InventoryItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Barcode = "Warehouse A",
                            ProductId = 1,
                            Quantity = 130
                        },
                        new
                        {
                            Id = 2,
                            Barcode = "Warehouse B",
                            ProductId = 2,
                            Quantity = 200
                        });
                });

            modelBuilder.Entity("SimpleWMS.Database.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A high-performance laptop",
                            Name = "Laptop"
                        },
                        new
                        {
                            Id = 2,
                            Description = "An innovative smartphone",
                            Name = "Smartphone"
                        });
                });

            modelBuilder.Entity("SimpleWMS.Database.Entities.StockInOut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AfterQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChangeInQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("InventoryItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PreviousQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TransactionType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("InventoryItemId");

                    b.ToTable("StockInOut");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AfterQuantity = 130,
                            ChangeInQuantity = 30,
                            Date = new DateTime(2024, 1, 1, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            InventoryItemId = 1,
                            PreviousQuantity = 100,
                            TransactionType = 0
                        },
                        new
                        {
                            Id = 2,
                            AfterQuantity = 100,
                            ChangeInQuantity = -100,
                            Date = new DateTime(2024, 2, 1, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            InventoryItemId = 2,
                            PreviousQuantity = 200,
                            TransactionType = 1
                        });
                });

            modelBuilder.Entity("SimpleWMS.Database.Entities.InventoryItem", b =>
                {
                    b.HasOne("SimpleWMS.Database.Entities.Product", "Product")
                        .WithMany("InventoryItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SimpleWMS.Database.Entities.StockInOut", b =>
                {
                    b.HasOne("SimpleWMS.Database.Entities.InventoryItem", "InventoryItem")
                        .WithMany("StockInOuts")
                        .HasForeignKey("InventoryItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventoryItem");
                });

            modelBuilder.Entity("SimpleWMS.Database.Entities.InventoryItem", b =>
                {
                    b.Navigation("StockInOuts");
                });

            modelBuilder.Entity("SimpleWMS.Database.Entities.Product", b =>
                {
                    b.Navigation("InventoryItems");
                });
#pragma warning restore 612, 618
        }
    }
}
